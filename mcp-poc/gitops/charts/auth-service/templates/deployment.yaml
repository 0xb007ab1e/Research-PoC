apiVersion: apps/v1
kind: Deployment
metadata:
  name: {{ include "auth-service.fullname" . }}
  labels:
    {{- include "auth-service.labels" . | nindent 4 }}
spec:
  replicas: {{ .Values.replicaCount }}
  selector:
    matchLabels:
      {{- include "auth-service.selectorLabels" . | nindent 6 }}
  template:
    metadata:
      annotations:
        # Sidecar injection annotations (for service mesh like Istio)
        sidecar.istio.io/inject: "true"
        sidecar.istio.io/proxyCPU: "100m"
        sidecar.istio.io/proxyMemory: "128Mi"
        {{- if .Values.vault.enabled }}
        # Vault Agent annotations
        vault.hashicorp.com/agent-inject: "true"
        vault.hashicorp.com/role: "{{ .Values.vault.agent.role }}"
        vault.hashicorp.com/agent-inject-secret-db-credentials: "database/creds/auth-service"
        vault.hashicorp.com/agent-inject-template-db-credentials: |
          {{ with secret "database/creds/auth-service" -}}
          export DB_USERNAME="{{ .Data.username }}"
          export DB_PASSWORD="{{ .Data.password }}"
          {{- end }}
        vault.hashicorp.com/agent-inject-secret-jwt-secrets: "secret/data/auth-service/jwt"
        vault.hashicorp.com/agent-inject-template-jwt-secrets: |
          {{ with secret "secret/data/auth-service/jwt" -}}
          export JWT_SECRET="{{ .Data.data.secret }}"
          export JWT_ISSUER="{{ .Data.data.issuer }}"
          {{- end }}
        {{- end }}
        {{- with .Values.podAnnotations }}
        {{- toYaml . | nindent 8 }}
        {{- end }}
      labels:
        {{- include "auth-service.selectorLabels" . | nindent 8 }}
        {{- with .Values.podLabels }}
        {{- toYaml . | nindent 8 }}
        {{- end }}
    spec:
      {{- with .Values.imagePullSecrets }}
      imagePullSecrets:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      serviceAccountName: {{ include "auth-service.serviceAccountName" . }}
      securityContext:
        {{- toYaml .Values.podSecurityContext | nindent 8 }}
      containers:
        - name: {{ .Chart.Name }}
          image: "{{ .Values.image.repository }}:{{ .Values.image.tag | default .Chart.AppVersion }}"
          imagePullPolicy: {{ .Values.image.pullPolicy }}
          securityContext:
            {{- toYaml .Values.securityContext | nindent 12 }}
          ports:
            - name: http
              containerPort: {{ .Values.service.targetPort }}
              protocol: TCP
          env:
            {{- with .Values.extraEnv }}
            {{- toYaml . | nindent 12 }}
            {{- end }}
          livenessProbe:
            httpGet:
              path: /health
              port: http
            initialDelaySeconds: 30
            periodSeconds: 10
            timeoutSeconds: 5
            failureThreshold: 3
          readinessProbe:
            httpGet:
              path: /ready
              port: http
            initialDelaySeconds: 10
            periodSeconds: 5
            timeoutSeconds: 3
            failureThreshold: 3
          resources:
            {{- toYaml .Values.resources | nindent 12 }}
          volumeMounts:
            - name: tmp
              mountPath: /tmp
            - name: cache
              mountPath: /home/nonroot/.cache
            {{- if .Values.vault.enabled }}
            - name: vault-secrets
              mountPath: /vault/secrets
              readOnly: true
            {{- end }}
            {{- if .Values.mtls.enabled }}
            - name: tls-certs
              mountPath: {{ .Values.tls.mountPath | default "/etc/certs" }}
              readOnly: true
            - name: client-certs
              mountPath: /etc/ssl/client
              readOnly: true
            - name: ca-certs
              mountPath: /etc/ssl/ca
              readOnly: true
            {{- end }}
      volumes:
        - name: tmp
          emptyDir: {}
        - name: cache
          emptyDir: {}
        {{- if .Values.vault.enabled }}
        - name: vault-secrets
          emptyDir: {}
        {{- end }}
        {{- if .Values.mtls.enabled }}
        - name: tls-certs
          secret:
            secretName: {{ .Values.tls.secretName }}
            defaultMode: 0400
        - name: client-certs
          secret:
            secretName: {{ .Values.mtls.clientCertSecret }}
            defaultMode: 0400
        - name: ca-certs
          projected:
            defaultMode: 0444
            sources:
            {{- range .Values.mtls.trustedCAs }}
            - secret:
                name: {{ . }}
                items:
                - key: ca-cert.pem
                  path: {{ . }}.pem
                optional: true
                - key: ca.crt
                  path: {{ . }}.crt
                  optional: true
            {{- end }}
        {{- end }}
      {{- with .Values.nodeSelector }}
      nodeSelector:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      {{- with .Values.affinity }}
      affinity:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      {{- with .Values.tolerations }}
      tolerations:
        {{- toYaml . | nindent 8 }}
      {{- end }}
