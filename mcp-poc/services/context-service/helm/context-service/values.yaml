# Default values for context-service.
# This is a YAML-formatted file.
# Declare variables to be passed into your templates.

replicaCount: 1

image:
  repository: context-service
  pullPolicy: IfNotPresent
  tag: "latest"

imagePullSecrets: []
nameOverride: ""
fullnameOverride: ""

serviceAccount:
  # Specifies whether a service account should be created
  create: true
  # Annotations to add to the service account
  annotations: {}
  # The name of the service account to use.
  # If not set and create is true, a name is generated using the fullname template
  name: ""

podAnnotations: {}

podSecurityContext: {}
  # fsGroup: 2000

securityContext: {}
  # capabilities:
  #   drop:
  #   - ALL
  # readOnlyRootFilesystem: true
  # runAsNonRoot: true
  # runAsUser: 1000

service:
  type: ClusterIP
  port: 8001

ingress:
  enabled: false
  className: ""
  annotations: {}
    # kubernetes.io/ingress.class: nginx
    # kubernetes.io/tls-acme: "true"
  hosts:
    - host: context-service.local
      paths:
        - path: /
          pathType: Prefix
  tls: []
  #  - secretName: context-service-tls
  #    hosts:
  #      - context-service.local

resources: {}
  # We usually recommend not to specify default resources and to leave this as a conscious
  # choice for the user. This also increases chances charts run on environments with little
  # resources, such as Minikube. If you do want to specify resources, uncomment the following
  # lines, adjust them as necessary, and remove the curly braces after 'resources:'.
  # limits:
  #   cpu: 100m
  #   memory: 128Mi
  # requests:
  #   cpu: 100m
  #   memory: 128Mi

autoscaling:
  enabled: false
  minReplicas: 1
  maxReplicas: 100
  targetCPUUtilizationPercentage: 80
  # targetMemoryUtilizationPercentage: 80

nodeSelector: {}

tolerations: []

affinity: {}

# Database configuration
database:
  host: postgresql
  port: 5432
  name: context_service
  user: context_user
  # Password should be set via secret or external config
  password: ""
  # List of tenant IDs to bootstrap during installation
  tenantIds: "default,demo"

# mTLS (Mutual TLS) Configuration
mtls:
  enabled: true
  enforce: true
  clientCertSecret: mcp-client-cert
  trustedCAs:
    - mcp-ca-cert
  verificationMode: "permissive"
  minTlsVersion: "1.2"
  cipherSuites: []
  rotation:
    enabled: true
    checkInterval: 12
    renewBefore: 15

# Environment variables for the application
env:
  - name: DB_HOST
    value: "postgresql"
  - name: DB_PORT
    value: "5432"
  - name: DB_NAME
    value: "context_service"
  - name: DB_USER
    value: "context_user"
  - name: DB_PASSWORD
    valueFrom:
      secretKeyRef:
        name: postgres-secret
        key: password
  - name: TENANT_IDS
    value: "default,demo"
  - name: ENVIRONMENT
    value: "production"
  - name: LOG_LEVEL
    value: "INFO"
  - name: PORT
    value: "8001"

# Database bootstrap job configuration
bootstrap:
  enabled: true
  image:
    repository: context-service
    tag: "latest"
  restartPolicy: OnFailure
  backoffLimit: 3
